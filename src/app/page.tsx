"use client";

import { type NextPage } from "next";
import Head from "next/head";
import { useState, useEffect } from "react";
import Attendee from "./attendee";
import QRCodes from "./qr";

const Home: NextPage = () => {
  // State to store the string array from fetched data
  const [qrData, setQrData] = useState<string[]>([]);

  // Function to remove empty fields from a single object
  const removeEmptyFields = (obj: any) => {
    return Object.keys(obj).reduce((acc, key) => {
      // Add to accumulator only if value is not empty (null, undefined, or empty string)
      if (
        obj[key] !== null &&
        obj[key] !== undefined &&
        obj[key] !== "" &&
        obj[key] !== 0 && 
        obj[key] !== false &&
        !(Array.isArray(obj[key]) && obj[key].length === 0)
      ) {
        acc[key] = obj[key];
      }
      return acc;
    }, {});
  };

  const removeUnnecessaryKeys = (obj: any, keysToRemove: string[]) => {
    const filteredObj = { ...obj };
    keysToRemove.forEach((key) => {
      delete filteredObj[key];
    });
    return filteredObj;
  };

  // Fetch data and update state
  const fetchData = async () => {
    const response = await fetch('https://sheetdb.io/api/v1/suk4789z30hwh');
    const data = await response.json();
    const keysToRemove=["DO YOU WANT TO BE A PART SHOWCASE / EVENTS ?\n\nDo you want to be a part of Kalaiyugam's Events & Showcase", "Upload the transcation proof", "DID YOU SELECT DEBATE EVENT ?", "DO YOU WANT TO BE A PART OF WORKSHOP ? \n\nDo you", "Timestamp", "Upload the Transaction Proof", "Upload your ID card", "Would you like to be a panel member for the debate?\n\nTopic : Traditional Art Vs AI Infused Art", "If yes, which side of the argument are you will to support?", "What would be your argument for the side that you've chosen for the debate?"];

    // Remove empty fields from each object
    const cleanedData = data
    .map(removeEmptyFields)
    .map((item: any) => removeUnnecessaryKeys(item, keysToRemove));

    // Convert each cleaned object into a string
    const stringArray = cleanedData.map((item: any) => JSON.stringify(item));
    
    // Set stringified data to state
    setQrData(stringArray);
  };

  // Fetch data when the component mounts
  useEffect(() => {
    fetchData();
  }, []);

  return (
    <>
      <Head>
        <title>Event Management</title>
        <meta name="description" content="Generated by Krisha" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Attendee />
      <QRCodes data={qrData} />
    </>
  );
};

export default Home;
